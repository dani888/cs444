Script started on Wed 29 Apr 2019 12:08:21 PM EDT
tuser@tutor-vserver:~/hw4$ mtip
Usage: mtip [-b board#] [-f download-file]
specify board by #: -b 1, etc.; defaults to scan.
more flags: [-x debuglevel] -e <escchar>
  Use ~ or Esc for mtip commands such as ~q or <Esc>q to quitfor more info on commands, type ~? or Esc? once program is running
now scanning for free board...
Using board # 1 

Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> 
-------------------------------------------------
Question 1: Dump first 4 PTE dumped

  page 0  at 0x00000007: page frame 0
  page 1 at 0x00001007: page frame 1
  page 2 at 0x00002007:: page frame 2
  page 3 at 0x00003007: page frame 3
 
  The important bits set to 007 and 
  D = 0, A = 0, U = 1, W = 1, V = 1 according 
  V: bit =1, valid page table entry
  W: bit =1, writing to page permitted
  U: bit =1, page is accessible in user mode
  A: bit =1, page has been accessed
  D: bit =1, page is dirty(has been modified)
 -------------------------------------------------
Tutor> rd all
EAX=00000001 EBX=00000000   EBP=00057890
EDX=00000000 ECX=0006967c   ESP=0005788c
ESI=00013e10 EDI=00051ffc   EIP=00057a9b
EFLAGS=0206 (IF=1 SF=0 ZF=0 CF=0 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=0   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
Tutor> mdd 50000
00050000    0018b8fc d88e0000 e08ec08e b20fe88e ......... ......
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003007 ......... ...0..
Tutor> mdd 52004
00052000    00001007 00002007 00003007 00004007 ......... ...0..
Tutor> mdd 52008
00052000    00001007 00002007 00003007 00004007 ......... ...0..
 -------------------------------------------------
  Question 2: Find and dump the 4 PTE's                                                         
  address of PTEx50 is 0x520c8 which is mapped
  to VA 50000
  We go up by 4 so mdd 52000 - 52004, 50 x 4 = 200
  which equals "c8" in hex, so mdd 0x520c8
  page 1 at location 520000 : page frame 32  = 00032007
  page 2 : page frame 33  = 00033007
  page 3 : page frame 34 =  00034007
  page 4 : page frame 35 = 00035007

  same important bits for now 
  D = 0, A = 0, U = 1, W = 1, V = 1
 -------------------------------------------------
Tutor> mdd 520c8
000520c8    00032007 00033007 00034007 00035007 . ...0...@...P..
-------------------------------------------------
 Question 3:
 set page 3 as valid
  Read on page 3 = 0x3000, mdd 3000
  On page 3,  PTE0x3 the bits have been changed to 027,
  Doing mdd 3000 on page 3 will change PTE0x3 to 027
  when doing ms 3000 4 
  page 3, on PTE0x3 the bits have been changed to 067,
-------------------------------------------------

Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003007 ......... ...0..
Tutor> mdd 3000
00003000    00007fd4 00000000 00205330 00008e00 ........0S .....
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003027 ......... ..'0..
Tutor> ms 3000 4
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003067 ......... ..g0..
-------------------------------------------------
 Question 4:
  setting page 3 to invalid using ms 5200c 3006,

  mdd 3000 we will get a page fault Exception fault.
   
  If we try to do a write on page3 ms 3000 8 we will get a page fault 
  Exception.

  should not be getting exception but cant change that it does
  not give exception. 
-------------------------------------------------
Tutor> ms 5200c 3006
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003006 ......... ...0..
Tutor> mdd 3000 
00003000    Exception 14 at EIP=00060d9e: Page fault
Tutor> ms 3000 8
Exception 14 at EIP=00061045: Page fault
-------------------------------------------------
 Question 5:
 ms 5200c 3008

  After setting page 3 to invalid, we start getting
  page fault errors.
  ms:
  Exception 14 at EIP=00061045: Page fault
  md:
  Exception 14 at EIP=00060d9e: Page fault

  flush the TLB
  We can see from doing rd all that the CR2 register holds 
  the address that causes the page fault exception.
-------------------------------------------------
Tutor> rs cr3 51000
Tutor> ms 3000 8
Exception 14 at EIP=00061045: Page fault
Tutor> ms 5200c 3008
Tutor> md 3000
00003000    Exception 14 at EIP=00060d9e: Page fault
Tutor> ms 3000 8
Exception 14 at EIP=00061045: Page fault
Tutor> rd all
EAX=00000008 EBX=0006f548   EBP=0006f520
EDX=00003000 ECX=000655a4   ESP=0006f520
ESI=0006f548 EDI=00000001   EIP=00061045
EFLAGS=10203 (IF=1 SF=0 ZF=0 CF=1 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=c0003000   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
-------------------------------------------------
 Question 6:
  We can make VA 3000 refer to PA 5000 by setting the PTE3 to point
  to PA 5000, ms 5200c 5006

  identity mapping VA 5000 is mapped to PA 5000. Writing
  a value of 3 to VA 5000, ms 5000 5, it is  also mapped to
  both VA 3000 VA 3000 so both locations yield the same 
  as seen below 

-------------------------------------------------
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00003008 ......... ...0..
Tutor> ms 5200c 5006
Tutor> md 52000
00052000    07 00 00 00 07 10 00 00 07 20 00 00 07 50 00 00 ......... ...P..
Tutor> md 52000
00052000    07 00 00 00 07 10 00 00 07 20 00 00 07 50 00 00 ......... ...P..
Tutor> mdd 52000
00052000    00000007 00001007 00002007 00005006 ......... ...P..
Tutor> ms 5000 5
Tutor> mdd 5000
00005000    00000005 00000000 00000000 00000000 ................
Tutor> mdd 3000
00003000    00000005 00000000 00000000 00000000 ................
-------------------------------------------------
 Question 7:
  We can see that overwriting PDE0 at 51c00 terminates the VM
  ms 51c00 0

 Send Ctrl+Alt+Del at the end of your session to reboot the tutor VM!
-------------------------------------------------
Tutor> rd all
EAX=00000008 EBX=0006f548   EBP=0006f520
EDX=00003000 ECX=000655a4   ESP=0006f520
ESI=0006f548 EDI=00000001   EIP=00061045
EFLAGS=10203 (IF=1 SF=0 ZF=0 CF=1 OF=0)
CS=0010 DS=0018 SS=0018 ES=0018 FS= 0018 GS=0018
CR0=80050033   CR2=c0003000   CR3=51000
IDTR=c005604c (limit 7ff)  GDTR=c0056854 (limit 4f)
Tutor> mdd 51c00
00051c00    00052027 00000000 00000000 00000000 ' ..............
Tutor> mdd 51c00 0
Tutor> ms 51c00 0
Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> 
Tutor> 
Quit handler: 
killing process 22520 Leaving board #1
tuser@tutor-vserver:~/hw4$ exit
exit

Script done on Wed 29 Apr 2019 12:34:27 PM EDT
